/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2206                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     simpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         5000;

deltaT          1;

writeControl    timeStep;

writeInterval   1000;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;



functions
{
    momErr
    {
        type            momentumError;
        libs            (fieldFunctionObjects);
        executeControl  writeTime;
        writeControl    writeTime;
    }

    contErr
    {
        type            div;
        libs            (fieldFunctionObjects);
        field           phi;
        executeControl  writeTime;
        writeControl    writeTime;
    }


    turbulenceFields1
    {
        type            turbulenceFields;
        libs            (fieldFunctionObjects);
        fields
        (
            k
            epsilon
            nut
            nuEff
            R
            devReff
            L
            I
        );

        executeControl  writeTime;
        writeControl    writeTime;
    }

    mag1
    {
        type            mag;
        libs            (fieldFunctionObjects);
        field           turbulenceProperties:R;

        result          magR;
        executeControl  writeTime;
        writeControl    writeTime;
    }

   forces1
   {
        // Mandatory entries
        type            forces;
        libs            ("libforces.so");
        patches         (airfoil trailingEdge);


        // Optional entries

        // Field names
        p           p;
        U           U;
        rho             rhoInf;
        rhoInf          1.225;
        // Reference pressure [Pa]
        pRef            0;

        // Include porosity effects?
        porosity        no;

        // Store and write volume field representations of forces and moments
        writeControl   timeStep;
        writeInterval  1000;

        // Centre of rotation for moment calculations
        CofR            (0 0 0);

        // Spatial data binning
        // - extents given by the bounds of the input geometry
        binData
        {
        nBin        20;
        direction   (1 0 0);
        cumulative  yes;
        }
    }

    forceCoeffs
    {
        type          forceCoeffs;
        libs          ("libforces.so");
        writeControl  timeStep;
        writeInterval 1000;
        patches       (airfoil trailingEdge);
        p             p;
        U             U;
        rho           rhoInf;
        log           true;
        rhoInf        1.225;
        liftDir       (-0.2419218956 0.9702957263 0);
        dragDir       (0.9702957263 0.2419218956 0);
        magUInf       34.02;
        lRef          1;
        Aref          0.001;
        origin        (0 0 0);
        e1            (0.9702957263 0.2419218956 0); //drag
        e3            (-0.2419218956 0.9702957263 0); //lift
    }

    yPlus1
   {
      // Mandatory entries (unmodifiable)
      type            yPlus;
      libs            (fieldFunctionObjects);

      // Optional (inherited) entries
      writePrecision  8;
      writeToFile     true;
      useUserTime     true;
      region          region0;
      enabled         true;
      log             true;
      timeStart       0;
      timeEnd         5000;
      executeControl  timeStep;
      executeInterval 1;
      writeControl    timeStep;
      writeInterval   1000;
   }
}

libs
(
    "libfvMotionSolvers.so"  // Required for dynamic mesh solvers
    "libgroovyBC.so"
    "libsimpleSwakFunctionObjects.so"
    "libswakFunctionObjects.so"
);


// ************************************************************************* //
